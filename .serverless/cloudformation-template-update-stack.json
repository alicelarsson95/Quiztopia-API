{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "SignupLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-api-dev-signup"
      }
    },
    "LoginLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-api-dev-login"
      }
    },
    "GetAllQuizLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-api-dev-getAllQuiz"
      }
    },
    "CreateQuizLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-api-dev-createQuiz"
      }
    },
    "AddQuestionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-api-dev-addQuestion"
      }
    },
    "GetByUserLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-api-dev-getByUser"
      }
    },
    "DeleteQuizLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/quiztopia-api-dev-deleteQuiz"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "quiztopia-api",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-api-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-api-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Query"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:eu-north-1:797622875139:table/users",
                    "arn:aws:dynamodb:eu-north-1:797622875139:table/users/index/UsernameIndex",
                    "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz",
                    "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/CreatedByIndex",
                    "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/TypeIndex",
                    "arn:aws:dynamodb:eu-north-1:797622875139:table/questions"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "quiztopia-api",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "SignupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
          "S3Key": "serverless/quiztopia-api/dev/1759402917960-2025-10-02T11:01:57.960Z/quiztopia-api.zip"
        },
        "Handler": "src/handlers/auth/signup.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "quiztopia-api-dev-signup",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "USERS_TABLE": "users",
            "QUIZ_TABLE": "quiz",
            "QUESTIONS_TABLE": "questions",
            "JWT_SECRET": "123ABC"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SignupLogGroup"
      ]
    },
    "LoginLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
          "S3Key": "serverless/quiztopia-api/dev/1759402917960-2025-10-02T11:01:57.960Z/quiztopia-api.zip"
        },
        "Handler": "src/handlers/auth/login.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "quiztopia-api-dev-login",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "USERS_TABLE": "users",
            "QUIZ_TABLE": "quiz",
            "QUESTIONS_TABLE": "questions",
            "JWT_SECRET": "123ABC"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LoginLogGroup"
      ]
    },
    "GetAllQuizLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
          "S3Key": "serverless/quiztopia-api/dev/1759402917960-2025-10-02T11:01:57.960Z/quiztopia-api.zip"
        },
        "Handler": "src/handlers/quiz/getAllQuiz.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "quiztopia-api-dev-getAllQuiz",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "USERS_TABLE": "users",
            "QUIZ_TABLE": "quiz",
            "QUESTIONS_TABLE": "questions",
            "JWT_SECRET": "123ABC"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetAllQuizLogGroup"
      ]
    },
    "CreateQuizLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
          "S3Key": "serverless/quiztopia-api/dev/1759402917960-2025-10-02T11:01:57.960Z/quiztopia-api.zip"
        },
        "Handler": "src/handlers/quiz/createQuiz.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "quiztopia-api-dev-createQuiz",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "USERS_TABLE": "users",
            "QUIZ_TABLE": "quiz",
            "QUESTIONS_TABLE": "questions",
            "JWT_SECRET": "123ABC"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateQuizLogGroup"
      ]
    },
    "AddQuestionLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
          "S3Key": "serverless/quiztopia-api/dev/1759402917960-2025-10-02T11:01:57.960Z/quiztopia-api.zip"
        },
        "Handler": "src/handlers/quiz/addQuestion.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "quiztopia-api-dev-addQuestion",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "USERS_TABLE": "users",
            "QUIZ_TABLE": "quiz",
            "QUESTIONS_TABLE": "questions",
            "JWT_SECRET": "123ABC"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AddQuestionLogGroup"
      ]
    },
    "GetByUserLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
          "S3Key": "serverless/quiztopia-api/dev/1759402917960-2025-10-02T11:01:57.960Z/quiztopia-api.zip"
        },
        "Handler": "src/handlers/quiz/getByUser.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "quiztopia-api-dev-getByUser",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "USERS_TABLE": "users",
            "QUIZ_TABLE": "quiz",
            "QUESTIONS_TABLE": "questions",
            "JWT_SECRET": "123ABC"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetByUserLogGroup"
      ]
    },
    "DeleteQuizLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
          "S3Key": "serverless/quiztopia-api/dev/1759402917960-2025-10-02T11:01:57.960Z/quiztopia-api.zip"
        },
        "Handler": "src/handlers/quiz/deleteQuiz.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "quiztopia-api-dev-deleteQuiz",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "USERS_TABLE": "users",
            "QUIZ_TABLE": "quiz",
            "QUESTIONS_TABLE": "questions",
            "JWT_SECRET": "123ABC"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DeleteQuizLogGroup"
      ]
    },
    "SignupLambdaVersioniQhtear1KrzexQbx2ptoqQEHY2JqVZEojHF8WdJmo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SignupLambdaFunction"
        },
        "CodeSha256": "MGlm/v9pnw7g8aXBj0vzXxVvmlsoWamzJ1SIOqZpbaA="
      }
    },
    "LoginLambdaVersionjSIfFLc9Vjt0bI1vzm196vFpSEG8BK1iyn3LYcoYE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LoginLambdaFunction"
        },
        "CodeSha256": "MGlm/v9pnw7g8aXBj0vzXxVvmlsoWamzJ1SIOqZpbaA="
      }
    },
    "GetAllQuizLambdaVersionhifVBfgVaAywh8YDGPD4ljy09e6gd6ndwYwsrI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllQuizLambdaFunction"
        },
        "CodeSha256": "MGlm/v9pnw7g8aXBj0vzXxVvmlsoWamzJ1SIOqZpbaA="
      }
    },
    "CreateQuizLambdaVersionzz00tkBAGFCIddxetIs1AM2aNIyOi2sSoHGUcX6T4gc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateQuizLambdaFunction"
        },
        "CodeSha256": "MGlm/v9pnw7g8aXBj0vzXxVvmlsoWamzJ1SIOqZpbaA="
      }
    },
    "AddQuestionLambdaVersion5eM1TWYXvmwQWfT1Zj406uckvAYRZ5hX6nDrZvcD4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddQuestionLambdaFunction"
        },
        "CodeSha256": "MGlm/v9pnw7g8aXBj0vzXxVvmlsoWamzJ1SIOqZpbaA="
      }
    },
    "GetByUserLambdaVersionABnLRFaoYCM4kjKLt8njFw001xPRj1Qwbdr0ljX2TU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetByUserLambdaFunction"
        },
        "CodeSha256": "MGlm/v9pnw7g8aXBj0vzXxVvmlsoWamzJ1SIOqZpbaA="
      }
    },
    "DeleteQuizLambdaVersionaSx9pK1zn7xdBEjeLmRVHqLzc9eJFwdfTEKjSDcrw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteQuizLambdaFunction"
        },
        "CodeSha256": "MGlm/v9pnw7g8aXBj0vzXxVvmlsoWamzJ1SIOqZpbaA="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-quiztopia-api",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "SignupLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SignupLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationSignup": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "SignupLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostAuthSignup": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /auth/signup",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationSignup"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationSignup"
    },
    "LoginLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LoginLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationLogin": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "LoginLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostAuthLogin": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /auth/login",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationLogin"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationLogin"
    },
    "GetAllQuizLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetAllQuizLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetAllQuiz": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetAllQuizLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetQuiz": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /quiz",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetAllQuiz"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetAllQuiz"
    },
    "CreateQuizLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateQuizLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationCreateQuiz": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CreateQuizLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostQuiz": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /quiz",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCreateQuiz"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCreateQuiz"
    },
    "AddQuestionLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddQuestionLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationAddQuestion": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "AddQuestionLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostQuizQuestion": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /quiz/question",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationAddQuestion"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationAddQuestion"
    },
    "GetByUserLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetByUserLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetByUser": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetByUserLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetQuizUseridVarQuizidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /quiz/{userId}/{quizId}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetByUser"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetByUser"
    },
    "DeleteQuizLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteQuizLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationDeleteQuiz": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "DeleteQuizLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteDeleteQuizQuizidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "DELETE /quiz/{quizId}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationDeleteQuiz"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationDeleteQuiz"
    },
    "UsersTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "users",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "username",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "UsernameIndex",
            "KeySchema": [
              {
                "AttributeName": "username",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ]
      }
    },
    "QuizTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "quiz",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "quizId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "createdBy",
            "AttributeType": "S"
          },
          {
            "AttributeName": "type",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "quizId",
            "KeyType": "HASH"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "CreatedByIndex",
            "KeySchema": [
              {
                "AttributeName": "createdBy",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          },
          {
            "IndexName": "TypeIndex",
            "KeySchema": [
              {
                "AttributeName": "type",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ]
      }
    },
    "QuestionsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "questions",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "quizId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "questionId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "quizId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "questionId",
            "KeyType": "RANGE"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
      "Export": {
        "Name": "sls-quiztopia-api-dev-ServerlessDeploymentBucketName"
      }
    },
    "SignupLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SignupLambdaVersioniQhtear1KrzexQbx2ptoqQEHY2JqVZEojHF8WdJmo"
      },
      "Export": {
        "Name": "sls-quiztopia-api-dev-SignupLambdaFunctionQualifiedArn"
      }
    },
    "LoginLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LoginLambdaVersionjSIfFLc9Vjt0bI1vzm196vFpSEG8BK1iyn3LYcoYE"
      },
      "Export": {
        "Name": "sls-quiztopia-api-dev-LoginLambdaFunctionQualifiedArn"
      }
    },
    "GetAllQuizLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetAllQuizLambdaVersionhifVBfgVaAywh8YDGPD4ljy09e6gd6ndwYwsrI"
      },
      "Export": {
        "Name": "sls-quiztopia-api-dev-GetAllQuizLambdaFunctionQualifiedArn"
      }
    },
    "CreateQuizLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateQuizLambdaVersionzz00tkBAGFCIddxetIs1AM2aNIyOi2sSoHGUcX6T4gc"
      },
      "Export": {
        "Name": "sls-quiztopia-api-dev-CreateQuizLambdaFunctionQualifiedArn"
      }
    },
    "AddQuestionLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddQuestionLambdaVersion5eM1TWYXvmwQWfT1Zj406uckvAYRZ5hX6nDrZvcD4"
      },
      "Export": {
        "Name": "sls-quiztopia-api-dev-AddQuestionLambdaFunctionQualifiedArn"
      }
    },
    "GetByUserLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetByUserLambdaVersionABnLRFaoYCM4kjKLt8njFw001xPRj1Qwbdr0ljX2TU"
      },
      "Export": {
        "Name": "sls-quiztopia-api-dev-GetByUserLambdaFunctionQualifiedArn"
      }
    },
    "DeleteQuizLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteQuizLambdaVersionaSx9pK1zn7xdBEjeLmRVHqLzc9eJFwdfTEKjSDcrw"
      },
      "Export": {
        "Name": "sls-quiztopia-api-dev-DeleteQuizLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-quiztopia-api-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-quiztopia-api-dev-HttpApiUrl"
      }
    }
  }
}
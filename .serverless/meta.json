{
  "C:\\Users\\alice\\JS24\\BACKEND FÖRDJUPNING\\quiztopia-api\\serverless.yml": {
    "versionFramework": "4.19.1",
    "servicePath": "C:\\Users\\alice\\JS24\\BACKEND FÖRDJUPNING\\quiztopia-api\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "js2024",
      "service": "quiztopia-api",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "eu-north-1",
        "environment": {
          "USERS_TABLE": "users",
          "QUIZ_TABLE": "quiz",
          "QUESTIONS_TABLE": "questions",
          "JWT_SECRET": "<REDACTED>"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:GetItem",
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:DeleteItem",
                  "dynamodb:Query"
                ],
                "Resource": [
                  "arn:aws:dynamodb:eu-north-1:797622875139:table/users",
                  "arn:aws:dynamodb:eu-north-1:797622875139:table/users/index/UsernameIndex",
                  "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz",
                  "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/CreatedByIndex",
                  "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/TypeIndex",
                  "arn:aws:dynamodb:eu-north-1:797622875139:table/questions"
                ]
              }
            ]
          }
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "SignupLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-api-dev-signup"
              }
            },
            "LoginLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-api-dev-login"
              }
            },
            "GetAllQuizLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-api-dev-getAllQuiz"
              }
            },
            "CreateQuizLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-api-dev-createQuiz"
              }
            },
            "AddQuestionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-api-dev-addQuestion"
              }
            },
            "GetByUserLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-api-dev-getByUser"
              }
            },
            "DeleteQuizLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/quiztopia-api-dev-deleteQuiz"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "quiztopia-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-api-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:Query"
                          ],
                          "Resource": [
                            "arn:aws:dynamodb:eu-north-1:797622875139:table/users",
                            "arn:aws:dynamodb:eu-north-1:797622875139:table/users/index/UsernameIndex",
                            "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz",
                            "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/CreatedByIndex",
                            "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/TypeIndex",
                            "arn:aws:dynamodb:eu-north-1:797622875139:table/questions"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "quiztopia-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "SignupLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                  "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
                },
                "Handler": "src/handlers/auth/signup.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "quiztopia-api-dev-signup",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "USERS_TABLE": "users",
                    "QUIZ_TABLE": "quiz",
                    "QUESTIONS_TABLE": "questions",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SignupLogGroup"
              ]
            },
            "LoginLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                  "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
                },
                "Handler": "src/handlers/auth/login.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "quiztopia-api-dev-login",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "USERS_TABLE": "users",
                    "QUIZ_TABLE": "quiz",
                    "QUESTIONS_TABLE": "questions",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "LoginLogGroup"
              ]
            },
            "GetAllQuizLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                  "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
                },
                "Handler": "src/handlers/quiz/getAllQuiz.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "quiztopia-api-dev-getAllQuiz",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "USERS_TABLE": "users",
                    "QUIZ_TABLE": "quiz",
                    "QUESTIONS_TABLE": "questions",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetAllQuizLogGroup"
              ]
            },
            "CreateQuizLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                  "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
                },
                "Handler": "src/handlers/quiz/createQuiz.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "quiztopia-api-dev-createQuiz",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "USERS_TABLE": "users",
                    "QUIZ_TABLE": "quiz",
                    "QUESTIONS_TABLE": "questions",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateQuizLogGroup"
              ]
            },
            "AddQuestionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                  "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
                },
                "Handler": "src/handlers/quiz/addQuestion.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "quiztopia-api-dev-addQuestion",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "USERS_TABLE": "users",
                    "QUIZ_TABLE": "quiz",
                    "QUESTIONS_TABLE": "questions",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AddQuestionLogGroup"
              ]
            },
            "GetByUserLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                  "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
                },
                "Handler": "src/handlers/quiz/getByUser.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "quiztopia-api-dev-getByUser",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "USERS_TABLE": "users",
                    "QUIZ_TABLE": "quiz",
                    "QUESTIONS_TABLE": "questions",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetByUserLogGroup"
              ]
            },
            "DeleteQuizLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                  "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
                },
                "Handler": "src/handlers/quiz/deleteQuiz.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "quiztopia-api-dev-deleteQuiz",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "USERS_TABLE": "users",
                    "QUIZ_TABLE": "quiz",
                    "QUESTIONS_TABLE": "questions",
                    "JWT_SECRET": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteQuizLogGroup"
              ]
            },
            "SignupLambdaVersionygXmJr83MvFRpgbYnOAMehksDWQ5LiKgeevIMdIA": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SignupLambdaFunction"
                },
                "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
              }
            },
            "LoginLambdaVersionO4X4vhfqYzLYBWfttOaGmA01tJ7IsCQytUZ1Ux8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LoginLambdaFunction"
                },
                "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
              }
            },
            "GetAllQuizLambdaVersionMsZYq5lwuDoeRfeOiAPmVVw9pBn8ciYzHLTQ3ELx0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetAllQuizLambdaFunction"
                },
                "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
              }
            },
            "CreateQuizLambdaVersionFowiVPsmcDwzKsqNG0CDrMj3q1ACWUEt4FVSA4zk7s": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateQuizLambdaFunction"
                },
                "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
              }
            },
            "AddQuestionLambdaVersionIeMMpY9TymjFDoJYJw7NgyeRKIRtkcDu9oElT9ROAPE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AddQuestionLambdaFunction"
                },
                "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
              }
            },
            "GetByUserLambdaVersionXg25Ynl0tUo7GqC1FcWCiPQYbWzRU47U6ZC9AdANck0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetByUserLambdaFunction"
                },
                "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
              }
            },
            "DeleteQuizLambdaVersionIkHZxt1MH9vgD5T3Ng9wQsjEAySEWgJK58xyQB5kf4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteQuizLambdaFunction"
                },
                "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-quiztopia-api",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "SignupLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "SignupLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationSignup": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "SignupLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostAuthSignup": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /auth/signup",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationSignup"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationSignup"
            },
            "LoginLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LoginLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationLogin": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "LoginLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostAuthLogin": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /auth/login",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationLogin"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationLogin"
            },
            "GetAllQuizLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetAllQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGetAllQuiz": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetAllQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetQuiz": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /quiz",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGetAllQuiz"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGetAllQuiz"
            },
            "CreateQuizLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationCreateQuiz": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "CreateQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostQuiz": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /quiz",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationCreateQuiz"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationCreateQuiz"
            },
            "AddQuestionLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AddQuestionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationAddQuestion": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "AddQuestionLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostQuizQuestion": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /quiz/question",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationAddQuestion"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationAddQuestion"
            },
            "GetByUserLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetByUserLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGetByUser": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetByUserLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetQuizUseridVarQuizidVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /quiz/{userId}/{quizId}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGetByUser"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGetByUser"
            },
            "DeleteQuizLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationDeleteQuiz": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "DeleteQuizLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteDeleteQuizQuizidVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "DELETE /quiz/{quizId}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationDeleteQuiz"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationDeleteQuiz"
            },
            "UsersTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "users",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "userId",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "username",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "userId",
                    "KeyType": "HASH"
                  }
                ],
                "GlobalSecondaryIndexes": [
                  {
                    "IndexName": "UsernameIndex",
                    "KeySchema": [
                      {
                        "AttributeName": "username",
                        "KeyType": "HASH"
                      }
                    ],
                    "Projection": {
                      "ProjectionType": "ALL"
                    }
                  }
                ]
              }
            },
            "QuizTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "quiz",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "quizId",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "createdBy",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "type",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "quizId",
                    "KeyType": "HASH"
                  }
                ],
                "GlobalSecondaryIndexes": [
                  {
                    "IndexName": "CreatedByIndex",
                    "KeySchema": [
                      {
                        "AttributeName": "createdBy",
                        "KeyType": "HASH"
                      }
                    ],
                    "Projection": {
                      "ProjectionType": "ALL"
                    }
                  },
                  {
                    "IndexName": "TypeIndex",
                    "KeySchema": [
                      {
                        "AttributeName": "type",
                        "KeyType": "HASH"
                      }
                    ],
                    "Projection": {
                      "ProjectionType": "ALL"
                    }
                  }
                ]
              }
            },
            "QuestionsTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "questions",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "quizId",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "questionId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "quizId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "questionId",
                    "KeyType": "RANGE"
                  }
                ]
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
              "Export": {
                "Name": "sls-quiztopia-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "SignupLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SignupLambdaVersionygXmJr83MvFRpgbYnOAMehksDWQ5LiKgeevIMdIA"
              },
              "Export": {
                "Name": "sls-quiztopia-api-dev-SignupLambdaFunctionQualifiedArn"
              }
            },
            "LoginLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LoginLambdaVersionO4X4vhfqYzLYBWfttOaGmA01tJ7IsCQytUZ1Ux8"
              },
              "Export": {
                "Name": "sls-quiztopia-api-dev-LoginLambdaFunctionQualifiedArn"
              }
            },
            "GetAllQuizLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetAllQuizLambdaVersionMsZYq5lwuDoeRfeOiAPmVVw9pBn8ciYzHLTQ3ELx0"
              },
              "Export": {
                "Name": "sls-quiztopia-api-dev-GetAllQuizLambdaFunctionQualifiedArn"
              }
            },
            "CreateQuizLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateQuizLambdaVersionFowiVPsmcDwzKsqNG0CDrMj3q1ACWUEt4FVSA4zk7s"
              },
              "Export": {
                "Name": "sls-quiztopia-api-dev-CreateQuizLambdaFunctionQualifiedArn"
              }
            },
            "AddQuestionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AddQuestionLambdaVersionIeMMpY9TymjFDoJYJw7NgyeRKIRtkcDu9oElT9ROAPE"
              },
              "Export": {
                "Name": "sls-quiztopia-api-dev-AddQuestionLambdaFunctionQualifiedArn"
              }
            },
            "GetByUserLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetByUserLambdaVersionXg25Ynl0tUo7GqC1FcWCiPQYbWzRU47U6ZC9AdANck0"
              },
              "Export": {
                "Name": "sls-quiztopia-api-dev-GetByUserLambdaFunctionQualifiedArn"
              }
            },
            "DeleteQuizLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteQuizLambdaVersionIkHZxt1MH9vgD5T3Ng9wQsjEAySEWgJK58xyQB5kf4"
              },
              "Export": {
                "Name": "sls-quiztopia-api-dev-DeleteQuizLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-quiztopia-api-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-quiztopia-api-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "signup": {
          "handler": "src/handlers/auth/signup.handler",
          "events": [
            {
              "httpApi": {
                "method": "POST",
                "path": "/auth/signup"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/auth/signup"
            }
          ],
          "name": "quiztopia-api-dev-signup",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "SignupLambdaVersionygXmJr83MvFRpgbYnOAMehksDWQ5LiKgeevIMdIA"
        },
        "login": {
          "handler": "src/handlers/auth/login.handler",
          "events": [
            {
              "httpApi": {
                "method": "POST",
                "path": "/auth/login"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/auth/login"
            }
          ],
          "name": "quiztopia-api-dev-login",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "LoginLambdaVersionO4X4vhfqYzLYBWfttOaGmA01tJ7IsCQytUZ1Ux8"
        },
        "getAllQuiz": {
          "handler": "src/handlers/quiz/getAllQuiz.handler",
          "events": [
            {
              "httpApi": {
                "method": "GET",
                "path": "/quiz"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/quiz"
            }
          ],
          "name": "quiztopia-api-dev-getAllQuiz",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "GetAllQuizLambdaVersionMsZYq5lwuDoeRfeOiAPmVVw9pBn8ciYzHLTQ3ELx0"
        },
        "createQuiz": {
          "handler": "src/handlers/quiz/createQuiz.handler",
          "events": [
            {
              "httpApi": {
                "method": "POST",
                "path": "/quiz"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/quiz"
            }
          ],
          "name": "quiztopia-api-dev-createQuiz",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "CreateQuizLambdaVersionFowiVPsmcDwzKsqNG0CDrMj3q1ACWUEt4FVSA4zk7s"
        },
        "addQuestion": {
          "handler": "src/handlers/quiz/addQuestion.handler",
          "events": [
            {
              "httpApi": {
                "method": "POST",
                "path": "/quiz/question"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/quiz/question"
            }
          ],
          "name": "quiztopia-api-dev-addQuestion",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "AddQuestionLambdaVersionIeMMpY9TymjFDoJYJw7NgyeRKIRtkcDu9oElT9ROAPE"
        },
        "getByUser": {
          "handler": "src/handlers/quiz/getByUser.handler",
          "events": [
            {
              "httpApi": {
                "method": "GET",
                "path": "/quiz/{userId}/{quizId}"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/quiz/{userId}/{quizId}"
            }
          ],
          "name": "quiztopia-api-dev-getByUser",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "GetByUserLambdaVersionXg25Ynl0tUo7GqC1FcWCiPQYbWzRU47U6ZC9AdANck0"
        },
        "deleteQuiz": {
          "handler": "src/handlers/quiz/deleteQuiz.handler",
          "events": [
            {
              "httpApi": {
                "method": "DELETE",
                "path": "/quiz/{quizId}"
              },
              "resolvedMethod": "DELETE",
              "resolvedPath": "/quiz/{quizId}"
            }
          ],
          "name": "quiztopia-api-dev-deleteQuiz",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "DeleteQuizLambdaVersionIkHZxt1MH9vgD5T3Ng9wQsjEAySEWgJK58xyQB5kf4"
        }
      },
      "resources": {
        "Resources": {
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "users",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "username",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "UsernameIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "username",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "QuizTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "quiz",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "quizId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "createdBy",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "type",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "quizId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "CreatedByIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "createdBy",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                },
                {
                  "IndexName": "TypeIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "type",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "QuestionsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "questions",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "quizId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "questionId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "quizId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "questionId",
                  "KeyType": "RANGE"
                }
              ]
            }
          }
        },
        "Outputs": {}
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "eu-north-1",
      "environment": {
        "USERS_TABLE": "users",
        "QUIZ_TABLE": "quiz",
        "QUESTIONS_TABLE": "questions",
        "JWT_SECRET": "<REDACTED>"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query"
              ],
              "Resource": [
                "arn:aws:dynamodb:eu-north-1:797622875139:table/users",
                "arn:aws:dynamodb:eu-north-1:797622875139:table/users/index/UsernameIndex",
                "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz",
                "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/CreatedByIndex",
                "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/TypeIndex",
                "arn:aws:dynamodb:eu-north-1:797622875139:table/questions"
              ]
            }
          ]
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "SignupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-api-dev-signup"
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-api-dev-login"
            }
          },
          "GetAllQuizLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-api-dev-getAllQuiz"
            }
          },
          "CreateQuizLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-api-dev-createQuiz"
            }
          },
          "AddQuestionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-api-dev-addQuestion"
            }
          },
          "GetByUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-api-dev-getByUser"
            }
          },
          "DeleteQuizLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/quiztopia-api-dev-deleteQuiz"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "quiztopia-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetItem",
                          "dynamodb:PutItem",
                          "dynamodb:UpdateItem",
                          "dynamodb:DeleteItem",
                          "dynamodb:Query"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:eu-north-1:797622875139:table/users",
                          "arn:aws:dynamodb:eu-north-1:797622875139:table/users/index/UsernameIndex",
                          "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz",
                          "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/CreatedByIndex",
                          "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/TypeIndex",
                          "arn:aws:dynamodb:eu-north-1:797622875139:table/questions"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "quiztopia-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SignupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
              },
              "Handler": "src/handlers/auth/signup.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "quiztopia-api-dev-signup",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users",
                  "QUIZ_TABLE": "quiz",
                  "QUESTIONS_TABLE": "questions",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SignupLogGroup"
            ]
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
              },
              "Handler": "src/handlers/auth/login.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "quiztopia-api-dev-login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users",
                  "QUIZ_TABLE": "quiz",
                  "QUESTIONS_TABLE": "questions",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "GetAllQuizLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
              },
              "Handler": "src/handlers/quiz/getAllQuiz.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "quiztopia-api-dev-getAllQuiz",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users",
                  "QUIZ_TABLE": "quiz",
                  "QUESTIONS_TABLE": "questions",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAllQuizLogGroup"
            ]
          },
          "CreateQuizLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
              },
              "Handler": "src/handlers/quiz/createQuiz.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "quiztopia-api-dev-createQuiz",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users",
                  "QUIZ_TABLE": "quiz",
                  "QUESTIONS_TABLE": "questions",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateQuizLogGroup"
            ]
          },
          "AddQuestionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
              },
              "Handler": "src/handlers/quiz/addQuestion.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "quiztopia-api-dev-addQuestion",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users",
                  "QUIZ_TABLE": "quiz",
                  "QUESTIONS_TABLE": "questions",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AddQuestionLogGroup"
            ]
          },
          "GetByUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
              },
              "Handler": "src/handlers/quiz/getByUser.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "quiztopia-api-dev-getByUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users",
                  "QUIZ_TABLE": "quiz",
                  "QUESTIONS_TABLE": "questions",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetByUserLogGroup"
            ]
          },
          "DeleteQuizLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
                "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
              },
              "Handler": "src/handlers/quiz/deleteQuiz.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "quiztopia-api-dev-deleteQuiz",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users",
                  "QUIZ_TABLE": "quiz",
                  "QUESTIONS_TABLE": "questions",
                  "JWT_SECRET": "<REDACTED>"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteQuizLogGroup"
            ]
          },
          "SignupLambdaVersionygXmJr83MvFRpgbYnOAMehksDWQ5LiKgeevIMdIA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignupLambdaFunction"
              },
              "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
            }
          },
          "LoginLambdaVersionO4X4vhfqYzLYBWfttOaGmA01tJ7IsCQytUZ1Ux8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
            }
          },
          "GetAllQuizLambdaVersionMsZYq5lwuDoeRfeOiAPmVVw9pBn8ciYzHLTQ3ELx0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAllQuizLambdaFunction"
              },
              "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
            }
          },
          "CreateQuizLambdaVersionFowiVPsmcDwzKsqNG0CDrMj3q1ACWUEt4FVSA4zk7s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateQuizLambdaFunction"
              },
              "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
            }
          },
          "AddQuestionLambdaVersionIeMMpY9TymjFDoJYJw7NgyeRKIRtkcDu9oElT9ROAPE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AddQuestionLambdaFunction"
              },
              "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
            }
          },
          "GetByUserLambdaVersionXg25Ynl0tUo7GqC1FcWCiPQYbWzRU47U6ZC9AdANck0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetByUserLambdaFunction"
              },
              "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
            }
          },
          "DeleteQuizLambdaVersionIkHZxt1MH9vgD5T3Ng9wQsjEAySEWgJK58xyQB5kf4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteQuizLambdaFunction"
              },
              "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-quiztopia-api",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "SignupLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSignup": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "SignupLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostAuthSignup": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /auth/signup",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSignup"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSignup"
          },
          "LoginLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationLogin": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostAuthLogin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /auth/login",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationLogin"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationLogin"
          },
          "GetAllQuizLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAllQuizLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetAllQuiz": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "GetAllQuizLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetQuiz": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /quiz",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetAllQuiz"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetAllQuiz"
          },
          "CreateQuizLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateQuizLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateQuiz": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "CreateQuizLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostQuiz": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /quiz",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateQuiz"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateQuiz"
          },
          "AddQuestionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AddQuestionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationAddQuestion": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "AddQuestionLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostQuizQuestion": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /quiz/question",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationAddQuestion"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationAddQuestion"
          },
          "GetByUserLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetByUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetByUser": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "GetByUserLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetQuizUseridVarQuizidVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /quiz/{userId}/{quizId}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetByUser"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetByUser"
          },
          "DeleteQuizLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteQuizLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDeleteQuiz": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "DeleteQuizLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteQuizQuizidVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /quiz/{quizId}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDeleteQuiz"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDeleteQuiz"
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "users",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "username",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "UsernameIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "username",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "QuizTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "quiz",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "quizId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "createdBy",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "type",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "quizId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "CreatedByIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "createdBy",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                },
                {
                  "IndexName": "TypeIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "type",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "QuestionsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "questions",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "quizId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "questionId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "quizId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "questionId",
                  "KeyType": "RANGE"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
            "Export": {
              "Name": "sls-quiztopia-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "SignupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignupLambdaVersionygXmJr83MvFRpgbYnOAMehksDWQ5LiKgeevIMdIA"
            },
            "Export": {
              "Name": "sls-quiztopia-api-dev-SignupLambdaFunctionQualifiedArn"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionO4X4vhfqYzLYBWfttOaGmA01tJ7IsCQytUZ1Ux8"
            },
            "Export": {
              "Name": "sls-quiztopia-api-dev-LoginLambdaFunctionQualifiedArn"
            }
          },
          "GetAllQuizLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAllQuizLambdaVersionMsZYq5lwuDoeRfeOiAPmVVw9pBn8ciYzHLTQ3ELx0"
            },
            "Export": {
              "Name": "sls-quiztopia-api-dev-GetAllQuizLambdaFunctionQualifiedArn"
            }
          },
          "CreateQuizLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateQuizLambdaVersionFowiVPsmcDwzKsqNG0CDrMj3q1ACWUEt4FVSA4zk7s"
            },
            "Export": {
              "Name": "sls-quiztopia-api-dev-CreateQuizLambdaFunctionQualifiedArn"
            }
          },
          "AddQuestionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AddQuestionLambdaVersionIeMMpY9TymjFDoJYJw7NgyeRKIRtkcDu9oElT9ROAPE"
            },
            "Export": {
              "Name": "sls-quiztopia-api-dev-AddQuestionLambdaFunctionQualifiedArn"
            }
          },
          "GetByUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetByUserLambdaVersionXg25Ynl0tUo7GqC1FcWCiPQYbWzRU47U6ZC9AdANck0"
            },
            "Export": {
              "Name": "sls-quiztopia-api-dev-GetByUserLambdaFunctionQualifiedArn"
            }
          },
          "DeleteQuizLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteQuizLambdaVersionIkHZxt1MH9vgD5T3Ng9wQsjEAySEWgJK58xyQB5kf4"
            },
            "Export": {
              "Name": "sls-quiztopia-api-dev-DeleteQuizLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-quiztopia-api-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-quiztopia-api-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "org: js2024\r\nservice: quiztopia-api\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: eu-north-1\r\n  environment:\r\n    USERS_TABLE: users\r\n    QUIZ_TABLE: quiz\r\n    QUESTIONS_TABLE: questions\r\n    JWT_SECRET: 123ABC\r\n  iam:\r\n    role:\r\n      statements:\r\n        - Effect: Allow\r\n          Action:\r\n            - dynamodb:GetItem\r\n            - dynamodb:PutItem\r\n            - dynamodb:UpdateItem\r\n            - dynamodb:DeleteItem\r\n            - dynamodb:Query\r\n          Resource:\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/users\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/users/index/UsernameIndex\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/quiz\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/quiz/index/CreatedByIndex\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/quiz/index/TypeIndex\r\n            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/questions\r\n\r\nfunctions:\r\n  signup:\r\n    handler: src/handlers/auth/signup.handler\r\n    events:\r\n      - httpApi:\r\n          method: POST\r\n          path: /auth/signup\r\n\r\n  login:\r\n    handler: src/handlers/auth/login.handler\r\n    events:\r\n      - httpApi:\r\n          method: POST\r\n          path: /auth/login\r\n\r\n  getAllQuiz:\r\n    handler: src/handlers/quiz/getAllQuiz.handler\r\n    events:\r\n      - httpApi:\r\n          method: GET\r\n          path: /quiz\r\n\r\n  createQuiz:\r\n    handler: src/handlers/quiz/createQuiz.handler\r\n    events:\r\n      - httpApi:\r\n          method: POST\r\n          path: /quiz\r\n\r\n  addQuestion:\r\n    handler: src/handlers/quiz/addQuestion.handler\r\n    events:\r\n      - httpApi:\r\n          method: POST\r\n          path: /quiz/question\r\n\r\n  getByUser:\r\n    handler: src/handlers/quiz/getByUser.handler\r\n    events:\r\n      - httpApi:\r\n          method: GET\r\n          path: /quiz/{userId}/{quizId}\r\n\r\n  deleteQuiz:\r\n    handler: src/handlers/quiz/deleteQuiz.handler\r\n    events:\r\n      - httpApi:\r\n          method: DELETE\r\n          path: /quiz/{quizId}\r\n\r\nresources:\r\n  Resources:\r\n    UsersTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: users\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n          - AttributeName: username\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n        GlobalSecondaryIndexes:\r\n          - IndexName: UsernameIndex\r\n            KeySchema:\r\n              - AttributeName: username\r\n                KeyType: HASH\r\n            Projection:\r\n              ProjectionType: ALL\r\n\r\n    QuizTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: quiz\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: quizId\r\n            AttributeType: S\r\n          - AttributeName: createdBy\r\n            AttributeType: S\r\n          - AttributeName: type\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: quizId\r\n            KeyType: HASH\r\n        GlobalSecondaryIndexes:\r\n          - IndexName: CreatedByIndex\r\n            KeySchema:\r\n              - AttributeName: createdBy\r\n                KeyType: HASH\r\n            Projection:\r\n              ProjectionType: ALL\r\n          - IndexName: TypeIndex\r\n            KeySchema:\r\n              - AttributeName: type\r\n                KeyType: HASH\r\n            Projection:\r\n              ProjectionType: ALL\r\n\r\n    QuestionsTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: questions\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: quizId\r\n            AttributeType: S\r\n          - AttributeName: questionId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: quizId\r\n            KeyType: HASH\r\n          - AttributeName: questionId\r\n            KeyType: RANGE\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "23fbf075-0b5d-471f-8633-539286f196bf",
    "orgName": "js2024",
    "userId": "sqxvKbJ0N2V6r4tM8G",
    "userName": "js2024",
    "serviceProviderAwsAccountId": "797622875139",
    "serviceProviderAwsCfStackName": "quiztopia-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-north-1:797622875139:stack/quiztopia-api-dev/d8379980-9e9a-11f0-94d3-06fd1943b9df",
    "serviceProviderAwsCfStackCreated": "2025-10-01T07:47:13.975Z",
    "serviceProviderAwsCfStackUpdated": "2025-10-01T08:28:45.109Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "DeleteQuizLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:797622875139:function:quiztopia-api-dev-deleteQuiz:34",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-api-dev-DeleteQuizLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetAllQuizLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:797622875139:function:quiztopia-api-dev-getAllQuiz:14",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-api-dev-GetAllQuizLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateQuizLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:797622875139:function:quiztopia-api-dev-createQuiz:34",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-api-dev-CreateQuizLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetByUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:797622875139:function:quiztopia-api-dev-getByUser:34",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-api-dev-GetByUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SignupLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:797622875139:function:quiztopia-api-dev-signup:36",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-api-dev-SignupLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AddQuestionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:797622875139:function:quiztopia-api-dev-addQuestion:34",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-api-dev-AddQuestionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "dagy6zym70",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-quiztopia-api-dev-HttpApiId"
      },
      {
        "OutputKey": "LoginLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:797622875139:function:quiztopia-api-dev-login:34",
        "Description": "Current Lambda function version",
        "ExportName": "sls-quiztopia-api-dev-LoginLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
        "ExportName": "sls-quiztopia-api-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://dagy6zym70.execute-api.eu-north-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-quiztopia-api-dev-HttpApiUrl"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "SignupLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-api-dev-signup"
          }
        },
        "LoginLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-api-dev-login"
          }
        },
        "GetAllQuizLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-api-dev-getAllQuiz"
          }
        },
        "CreateQuizLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-api-dev-createQuiz"
          }
        },
        "AddQuestionLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-api-dev-addQuestion"
          }
        },
        "GetByUserLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-api-dev-getByUser"
          }
        },
        "DeleteQuizLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/quiztopia-api-dev-deleteQuiz"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "quiztopia-api",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-api-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quiztopia-api-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:GetItem",
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:Query"
                      ],
                      "Resource": [
                        "arn:aws:dynamodb:eu-north-1:797622875139:table/users",
                        "arn:aws:dynamodb:eu-north-1:797622875139:table/users/index/UsernameIndex",
                        "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz",
                        "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/CreatedByIndex",
                        "arn:aws:dynamodb:eu-north-1:797622875139:table/quiz/index/TypeIndex",
                        "arn:aws:dynamodb:eu-north-1:797622875139:table/questions"
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "quiztopia-api",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "SignupLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
              "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
            },
            "Handler": "src/handlers/auth/signup.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "quiztopia-api-dev-signup",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "USERS_TABLE": "users",
                "QUIZ_TABLE": "quiz",
                "QUESTIONS_TABLE": "questions",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "SignupLogGroup"
          ]
        },
        "LoginLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
              "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
            },
            "Handler": "src/handlers/auth/login.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "quiztopia-api-dev-login",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "USERS_TABLE": "users",
                "QUIZ_TABLE": "quiz",
                "QUESTIONS_TABLE": "questions",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "LoginLogGroup"
          ]
        },
        "GetAllQuizLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
              "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
            },
            "Handler": "src/handlers/quiz/getAllQuiz.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "quiztopia-api-dev-getAllQuiz",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "USERS_TABLE": "users",
                "QUIZ_TABLE": "quiz",
                "QUESTIONS_TABLE": "questions",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetAllQuizLogGroup"
          ]
        },
        "CreateQuizLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
              "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
            },
            "Handler": "src/handlers/quiz/createQuiz.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "quiztopia-api-dev-createQuiz",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "USERS_TABLE": "users",
                "QUIZ_TABLE": "quiz",
                "QUESTIONS_TABLE": "questions",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "CreateQuizLogGroup"
          ]
        },
        "AddQuestionLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
              "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
            },
            "Handler": "src/handlers/quiz/addQuestion.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "quiztopia-api-dev-addQuestion",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "USERS_TABLE": "users",
                "QUIZ_TABLE": "quiz",
                "QUESTIONS_TABLE": "questions",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "AddQuestionLogGroup"
          ]
        },
        "GetByUserLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
              "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
            },
            "Handler": "src/handlers/quiz/getByUser.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "quiztopia-api-dev-getByUser",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "USERS_TABLE": "users",
                "QUIZ_TABLE": "quiz",
                "QUESTIONS_TABLE": "questions",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetByUserLogGroup"
          ]
        },
        "DeleteQuizLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
              "S3Key": "serverless/quiztopia-api/dev/1759322028053-2025-10-01T12:33:48.053Z/quiztopia-api.zip"
            },
            "Handler": "src/handlers/quiz/deleteQuiz.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "quiztopia-api-dev-deleteQuiz",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "USERS_TABLE": "users",
                "QUIZ_TABLE": "quiz",
                "QUESTIONS_TABLE": "questions",
                "JWT_SECRET": "<REDACTED>"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "DeleteQuizLogGroup"
          ]
        },
        "SignupLambdaVersionygXmJr83MvFRpgbYnOAMehksDWQ5LiKgeevIMdIA": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "SignupLambdaFunction"
            },
            "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
          }
        },
        "LoginLambdaVersionO4X4vhfqYzLYBWfttOaGmA01tJ7IsCQytUZ1Ux8": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "LoginLambdaFunction"
            },
            "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
          }
        },
        "GetAllQuizLambdaVersionMsZYq5lwuDoeRfeOiAPmVVw9pBn8ciYzHLTQ3ELx0": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetAllQuizLambdaFunction"
            },
            "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
          }
        },
        "CreateQuizLambdaVersionFowiVPsmcDwzKsqNG0CDrMj3q1ACWUEt4FVSA4zk7s": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CreateQuizLambdaFunction"
            },
            "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
          }
        },
        "AddQuestionLambdaVersionIeMMpY9TymjFDoJYJw7NgyeRKIRtkcDu9oElT9ROAPE": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "AddQuestionLambdaFunction"
            },
            "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
          }
        },
        "GetByUserLambdaVersionXg25Ynl0tUo7GqC1FcWCiPQYbWzRU47U6ZC9AdANck0": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetByUserLambdaFunction"
            },
            "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
          }
        },
        "DeleteQuizLambdaVersionIkHZxt1MH9vgD5T3Ng9wQsjEAySEWgJK58xyQB5kf4": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "DeleteQuizLambdaFunction"
            },
            "CodeSha256": "hai+i2bxtpgCLsb7h2NLojW87vLuOzTSJf2Z3ZMzPjA="
          }
        },
        "HttpApi": {
          "Type": "AWS::ApiGatewayV2::Api",
          "Properties": {
            "Name": "dev-quiztopia-api",
            "ProtocolType": "HTTP"
          }
        },
        "HttpApiStage": {
          "Type": "AWS::ApiGatewayV2::Stage",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "StageName": "$default",
            "AutoDeploy": true,
            "DefaultRouteSettings": {
              "DetailedMetricsEnabled": false
            }
          }
        },
        "SignupLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "SignupLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationSignup": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "SignupLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRoutePostAuthSignup": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /auth/signup",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationSignup"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationSignup"
        },
        "LoginLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "LoginLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationLogin": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "LoginLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRoutePostAuthLogin": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /auth/login",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationLogin"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationLogin"
        },
        "GetAllQuizLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetAllQuizLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationGetAllQuiz": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "GetAllQuizLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteGetQuiz": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "GET /quiz",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationGetAllQuiz"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationGetAllQuiz"
        },
        "CreateQuizLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CreateQuizLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationCreateQuiz": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "CreateQuizLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRoutePostQuiz": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /quiz",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationCreateQuiz"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationCreateQuiz"
        },
        "AddQuestionLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "AddQuestionLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationAddQuestion": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "AddQuestionLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRoutePostQuizQuestion": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /quiz/question",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationAddQuestion"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationAddQuestion"
        },
        "GetByUserLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetByUserLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationGetByUser": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "GetByUserLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteGetQuizUseridVarQuizidVar": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "GET /quiz/{userId}/{quizId}",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationGetByUser"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationGetByUser"
        },
        "DeleteQuizLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "DeleteQuizLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationDeleteQuiz": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "DeleteQuizLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteDeleteQuizQuizidVar": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "DELETE /quiz/{quizId}",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationDeleteQuiz"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationDeleteQuiz"
        },
        "UsersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "users",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "userId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "username",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "UsernameIndex",
                "KeySchema": [
                  {
                    "AttributeName": "username",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        },
        "QuizTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "quiz",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "quizId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "createdBy",
                "AttributeType": "S"
              },
              {
                "AttributeName": "type",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "quizId",
                "KeyType": "HASH"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "CreatedByIndex",
                "KeySchema": [
                  {
                    "AttributeName": "createdBy",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              },
              {
                "IndexName": "TypeIndex",
                "KeySchema": [
                  {
                    "AttributeName": "type",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        },
        "QuestionsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "questions",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "quizId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "questionId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "quizId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "questionId",
                "KeyType": "RANGE"
              }
            ]
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-eu-north-1-b067ceac-0dfc",
          "Export": {
            "Name": "sls-quiztopia-api-dev-ServerlessDeploymentBucketName"
          }
        },
        "SignupLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "SignupLambdaVersionygXmJr83MvFRpgbYnOAMehksDWQ5LiKgeevIMdIA"
          },
          "Export": {
            "Name": "sls-quiztopia-api-dev-SignupLambdaFunctionQualifiedArn"
          }
        },
        "LoginLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "LoginLambdaVersionO4X4vhfqYzLYBWfttOaGmA01tJ7IsCQytUZ1Ux8"
          },
          "Export": {
            "Name": "sls-quiztopia-api-dev-LoginLambdaFunctionQualifiedArn"
          }
        },
        "GetAllQuizLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetAllQuizLambdaVersionMsZYq5lwuDoeRfeOiAPmVVw9pBn8ciYzHLTQ3ELx0"
          },
          "Export": {
            "Name": "sls-quiztopia-api-dev-GetAllQuizLambdaFunctionQualifiedArn"
          }
        },
        "CreateQuizLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CreateQuizLambdaVersionFowiVPsmcDwzKsqNG0CDrMj3q1ACWUEt4FVSA4zk7s"
          },
          "Export": {
            "Name": "sls-quiztopia-api-dev-CreateQuizLambdaFunctionQualifiedArn"
          }
        },
        "AddQuestionLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "AddQuestionLambdaVersionIeMMpY9TymjFDoJYJw7NgyeRKIRtkcDu9oElT9ROAPE"
          },
          "Export": {
            "Name": "sls-quiztopia-api-dev-AddQuestionLambdaFunctionQualifiedArn"
          }
        },
        "GetByUserLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetByUserLambdaVersionXg25Ynl0tUo7GqC1FcWCiPQYbWzRU47U6ZC9AdANck0"
          },
          "Export": {
            "Name": "sls-quiztopia-api-dev-GetByUserLambdaFunctionQualifiedArn"
          }
        },
        "DeleteQuizLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "DeleteQuizLambdaVersionIkHZxt1MH9vgD5T3Ng9wQsjEAySEWgJK58xyQB5kf4"
          },
          "Export": {
            "Name": "sls-quiztopia-api-dev-DeleteQuizLambdaFunctionQualifiedArn"
          }
        },
        "HttpApiId": {
          "Description": "Id of the HTTP API",
          "Value": {
            "Ref": "HttpApi"
          },
          "Export": {
            "Name": "sls-quiztopia-api-dev-HttpApiId"
          }
        },
        "HttpApiUrl": {
          "Description": "URL of the HTTP API",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "HttpApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                }
              ]
            ]
          },
          "Export": {
            "Name": "sls-quiztopia-api-dev-HttpApiUrl"
          }
        }
      }
    }
  }
}